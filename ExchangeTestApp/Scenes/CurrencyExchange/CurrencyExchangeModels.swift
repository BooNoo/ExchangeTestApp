//
//  CurrencyExchangeModels.swift
//  ExchangeTestApp
//
//  Created by Vladimir on 27.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum CurrencyExchange
{
    struct CurrencyExchangeCard {
        var currency: Currency
        var userBalance: Float
    }
    // MARK: Use cases
    
    enum SetNavigationTitle
    {
        struct Request
        {
        }
        struct Response
        {
            var from: Currency
            var to: Currency
        }
        struct ViewModel
        {
            var title: String
        }
    }
    
    enum FetchCurrencies
    {
        struct Request
        {
        }
        struct Response
        {
            var currenciesCards: [CurrencyExchangeCard]
        }
        struct ViewModel
        {
            struct DisplayedCurrencyExchangeCard {
                var currency: Currency
                var userBalance: String
            }
            var currenciesCards: [DisplayedCurrencyExchangeCard]
        }
    }
    
    enum ExchangeContext  {
        case From
        case To
    }
    
    enum ChangeExchange
    {
        struct Request
        {
            var context: ExchangeContext
            var index: Int
        }
        struct Response
        {
        }
        struct ViewModel
        {
        }
    }
    
    enum FetchCurrentCurrencyExchange
    {
        struct Request
        {
        }
        struct Response
        {
            var exchangeFromIndex: Int
            var exchangeToIndex: Int
            var exchangeFrom: Currency
            var exchangeTo: Currency
            var exchangeFromValue: Float?
            var exchangeToValue: Float?
            var context: ExchangeContext
        }
        struct ViewModel
        {
            var exchangeFromIndex: Int
            var exchangeToIndex: Int
            var exchangeFromTo: String
            var exchangeToFrom: String
            var exchangeFromValue: String?
            var exchangeToValue: String?
            var context: ExchangeContext
        }
    }
    
    enum CountExchange {
        struct Request
        {
            var context: ExchangeContext
            var text: String?
        }
        struct Response
        {
            var exchangeFromIndex: Int
            var exchangeToIndex: Int
            var exchangeFromToValue: Float?
            var exchangeToFromValue: Float?
            var context: ExchangeContext
        }
        struct ViewModel
        {
            var exchangeFromIndex: Int
            var exchangeToIndex: Int
            var exchangeFromToValue: String?
            var exchangeToFromValue: String?
            var context: ExchangeContext
        }
    }
    
    enum Exchange {

        struct Request
        {
        }
        struct Response
        {
        }
        struct ViewModel
        {
        }
    }
    
}
